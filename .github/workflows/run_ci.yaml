name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate-pipelines:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install hatch

      - name: Test pipeline serialization
        id: test_serialization
        run: hatch run dp:test-pipeline-serialization

  serialize-pipelines:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    outputs:
      has_changes: ${{ steps.check_changes.outputs.has_changes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install hatch

      - name: Generate YAML files
        id: generate
        run: hatch run dp:serialize-pipelines
        
      - name: Check for changes
        id: check_changes
        run: |
          if [ -n "$(git status --porcelain dist/pipelines/)" ]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected in pipelines, skipping"
          fi
  test:
    runs-on: ubuntu-latest
    needs: [code-quality]
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install Hatch
      run: pip install hatch
        
    - name: Run tests
      run: hatch run tests
        
  code-quality:
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.check_formatting.outputs.has_changes }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        
    - name: Install Hatch
      run: pip install hatch
        
    - name: Run mypy
      run: hatch run code-quality:mypy src tests
        
    - name: Run black
      run: hatch run code-quality:format-fix
        
    - name: Run ruff
      run: hatch run code-quality:lint-fix
        
    - name: Check for code formatting changes
      if: github.event_name != 'pull_request'
      id: check_formatting
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "has_changes=true" >> $GITHUB_OUTPUT
        else
          echo "has_changes=false" >> $GITHUB_OUTPUT
          echo "No code formatting changes detected, skipping"
        fi
