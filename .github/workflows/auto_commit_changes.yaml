name: Auto Commit Changes

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches: [main]
    
permissions:
  contents: write

jobs:
  commit-changes:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_GITHUB }}

      - name: Download code-quality artifact
        uses: actions/github-script@v6
        id: download-artifact-quality
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.workflow_run.id }}
            });
            const qualityArtifact = artifacts.data.artifacts.find(artifact => {
              return artifact.name === "code-quality-changes"
            });
            if (qualityArtifact) {
              const download = await github.rest.actions.downloadArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: qualityArtifact.id,
                archive_format: 'zip'
              });
              const fs = require('fs');
              fs.writeFileSync('code-quality-changes.zip', Buffer.from(download.data));
              return true;
            }
            return false;

      - name: Download pipeline-serialize artifact
        uses: actions/github-script@v6
        id: download-artifact-pipeline
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.workflow_run.id }}
            });
            const pipelineArtifact = artifacts.data.artifacts.find(artifact => {
              return artifact.name === "pipeline-changes"
            });
            if (pipelineArtifact) {
              const download = await github.rest.actions.downloadArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: pipelineArtifact.id,
                archive_format: 'zip'
              });
              const fs = require('fs');
              fs.writeFileSync('pipeline-changes.zip', Buffer.from(download.data));
              return true;
            }
            return false;
      
      - name: Apply code quality changes
        if: steps.download-artifact-quality.outputs.result == 'true'
        run: |
          unzip -o code-quality-changes.zip
          if [ -f "code_quality_changes.txt" ] && [ "$(cat code_quality_changes.txt)" == "true" ]; then
            echo "Applying code quality changes"
            rm code_quality_changes.txt
            git config --global user.name 'GitHub Action'
            git config --global user.email 'action@github.com'
            git add .
            git commit -m "style: auto-format and lint code with black and ruff"
          fi

      - name: Apply pipeline serialization changes
        if: steps.download-artifact-pipeline.outputs.result == 'true'
        run: |
          unzip -o pipeline-changes.zip
          if [ -f "pipeline_changes.txt" ] && [ "$(cat pipeline_changes.txt)" == "true" ]; then
            echo "Applying pipeline serialization changes"
            rm pipeline_changes.txt
            git config --global user.name 'GitHub Action'
            git config --global user.email 'action@github.com'
            git add dist/pipelines/
            git commit -m "chore: auto-serialize pipelines"
          fi

      - name: Push changes
        run: |
          if [ -n "$(git log --oneline @{u}..HEAD)" ]; then
            echo "Pushing changes"
            git push
          else
            echo "No changes to push"
          fi
