name: Process Auto Changes

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches: [main]
    
permissions:
  contents: write

jobs:
  process-changes:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_GITHUB }}
      
      # Download all artifacts at once to avoid duplicate artifact handling
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
          name-prefix: ""
          path: artifacts
          
      - name: Setup git
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
      
      # Stage 1: Handle code quality changes if needed
      - name: Apply code quality changes
        run: |
          if [ -f "artifacts/code-quality-changes/code_quality_changes.txt" ] && [ "$(cat artifacts/code-quality-changes/code_quality_changes.txt)" == "true" ]; then
            echo "Applying code quality changes"
            git add .
            git commit -m "style: auto-format and lint code with black and ruff"
          else
            echo "No code quality changes to apply"
          fi

      # Stage 2: Handle pipeline serialization changes if needed
      - name: Apply pipeline serialization changes
        run: |
          if [ -f "artifacts/pipeline-changes/pipeline_changes.txt" ] && [ "$(cat artifacts/pipeline-changes/pipeline_changes.txt)" == "true" ]; then
            echo "Applying pipeline serialization changes"
            git add dist/pipelines/
            git commit -m "chore: auto-serialize pipelines"
          else
            echo "No pipeline serialization changes to apply"
          fi

      # Push all changes at once if there are any
      - name: Push changes
        run: |
          if [ -n "$(git log --oneline @{u}..HEAD)" ]; then
            echo "Pushing changes"
            git push
          else
            echo "No changes to push"
          fi
